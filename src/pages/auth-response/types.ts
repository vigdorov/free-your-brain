export type QueryRequest = {
    /**
     * При запросе токена следует указать значение «token»
     */
    response_type: string;
    /**
     * Идентификатор приложения. Доступен в свойствах приложения
     */
    client_id: string;
    /**
     * Уникальный идентификатор устройства, для которого запрашивается токен. Чтобы обеспечить
     * уникальность, достаточно один раз сгенерировать UUID и использовать его при каждом запросе
     * нового токена с данного устройства.
     *
     * Идентификатор должен быть не короче 6 символов и не длиннее 50. Допускается использовать
     * только печатаемые ASCII-символы (с кодами от 32 до 126).
     */
    device_id?: string;
    /**
     * Имя устройства, которое следует показывать пользователям. Не длиннее 100 символов.
     */
    device_name?: string;
    /**
     * URL, на который нужно перенаправить пользователя после того, как он разрешил или отказал приложению
     * в доступе. По умолчанию используется первый Callback URI, указанный в настройках приложения.
     * В значении параметра допустимо указывать только те адреса, которые перечислены в настройках
     * приложения. Если совпадение неточное, параметр игнорируется.
     */
    redirect_uri?: string;
    /**
     * Явное указание аккаунта, для которого запрашивается токен. В значении параметра можно передавать логин
     * аккаунта на Яндексе, а также адрес Яндекс.Почты или Яндекс.Почты для домена.
     */
    login_hint?: string;
    /**
     * Список необходимых приложению в данный момент прав доступа, разделенных пробелом. Права должны
     * запрашиваться из перечня, определенного при регистрации приложения. Если параметры scope
     * и optional_scope не переданы, то токен будет выдан с правами, указанными при регистрации приложения.
     */
    scope?: string;
    /**
     * Если параметры scope и optional_scope не переданы, то токен будет выдан с правами,
     * указанными при регистрации приложения.
     */
    optional_scope?: string;
    /**
     * Признак того, что у пользователя обязательно нужно запросить разрешение на доступ
     * к аккаунту (даже если пользователь уже разрешил доступ данному приложению).
     * Получив этот параметр, Яндекс.OAuth предложит пользователю разрешить доступ приложению
     * и выбрать нужный аккаунт Яндекса.
     */
    force_confirm?: 'yes' | true | 1;
    /**
     * Строка состояния, которую Яндекс.OAuth возвращает без изменения.
     * Максимальная допустимая длина строки — 1024 символа.
     */
    state?: string;
    /**
     * Признак облегченной верстки (без стандартной навигации Яндекса) для страницы разрешения доступа.
     * Облегченную верстку стоит запрашивать, например, если страницу разрешения нужно отобразить
     * в маленьком всплывающем окне.
     */
    display?: 'popup';
};

export type QueryResponse = {
    /**
     * OAuth-токен с запрошенными правами или с правами, указанными при регистрации приложения.
     */
    access_token: string;
    /**
     * Время жизни токена в секундах.
     */
    expires_in: string;
    /**
     * Тип выданного токена. Всегда принимает значение «bearer».
     */
    token_type: 'bearer';
    /**
     * Значение параметра state из исходного запроса, если этот параметр был передан.
     */
    state?: string;
};

export type QueryResponseError = {
    /**
     * Код ошибки
     */
    error: 'access_denied' | 'unauthorized_client';
    /**
     * Описание ошибки
     */
    error_description: string;
    /**
     * Значение параметра state из исходного запроса, если этот параметр был передан.
     */
    state?: string;
};
